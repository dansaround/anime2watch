"use client";
import { shuffle } from "lodash";
import { Anime } from "@/lib/types";
import type { Metadata } from "next";
import { toast, Toaster } from "sonner";
import { useQuery } from "@apollo/client";
import { useEffect } from "react";
import { Geist, Geist_Mono } from "next/font/google";
import { GET_HERO_SECTION_ANIMES } from "@/lib/queries";

import { HomeBanner } from "../components/Banners/HomeBanner";

import { ScrollArea, ScrollBar } from "@/components/ui/scroll-area";
import { Sidebar } from "../components/domains/home/Sidebar";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function MainLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const { loading, data, error } = useQuery(GET_HERO_SECTION_ANIMES);

  const getHeroAnimes = () => {
    return loading
      ? []
      : data
      ? shuffle(
          data.Page.media.filter(
            (anime: Anime) =>
              anime.bannerImage != null && anime.description.length
          )
        ).slice(0, 3)
      : [];
  };

  useEffect(() => {
    if (error) {
      toast.error("Ups, something went wrong", {
        description: "Anilist server is down ): lease try again later",
        action: {
          label: "Close",
          onClick: () => console.log("Closed error notification"),
        },
      });
    }
    console.log("useffecting at search page");
  }, [error]);

  return (
    <div className="antialiased h-full flex flex-col bg-gray-100 relative">
      <ScrollArea className="w-full h-full bg-black">
        <div className="sm:min-h-96 -mt-2 sm:-mt-16">
          <HomeBanner animes={getHeroAnimes()} isLoading={loading} />
        </div>

        <Toaster position="top-center" richColors />

        <div className="flex-grow">
          <div className="grid md:grid-cols-[1.4fr_6fr] h-full bg-yellow-300">
            <Sidebar />
            <main className="bg-black w-full h-full overflow-x-hidden ">
              {children}
            </main>
          </div>
        </div>
        <ScrollBar orientation="vertical" />
      </ScrollArea>
    </div>
  );
}
