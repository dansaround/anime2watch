"use client";
import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import { GET_HERO_SECTION_ANIMES } from "@/lib/queries";
import { useQuery } from "@apollo/client";
import { shuffle } from "lodash";
import { SkeletonRectangle } from "../components/SkeletonRectangle";
import { Anime } from "@/lib/types";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function FavLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const { loading, data } = useQuery(GET_HERO_SECTION_ANIMES);

  const getHeroAnimes = () => {
    return loading
      ? []
      : data
      ? shuffle(
          data.Page.media.filter(
            (anime: Anime) =>
              anime.bannerImage != null && anime.description.length
          )
        ).slice(0, 3)
      : [];
  };

  return (
    <div
      className={`${geistSans.variable} ${geistMono.variable} antialiased bg-black flex flex-col relative h-full`}
    >
      {children}
    </div>
  );
}
